#!/usr/bin/env bash
#
# bash script to tar with gzip a folder
# then gpg encrypt and delete remaining files
#
if [ -z ${1+x} ]; then
    echo -e "Error - No directory specified\nUsage: crypto [target directory]\nFor decryption, use the 'dcrypto' command"
    exit 1
elif ! { [ -f "$1" ] || [ -d "$1" ]; }; then
    echo "File or directory not found"
    exit 1
else
    echo "Preparing $1..."
fi

# get user specified directory
target_dir="$1"

# check for trailing slash, and remove if present
length=${#target_dir}
((length--))
if [ "${target_dir:$length:1}" == "/" ]; then
    echo "Removing trailing slash..."
    target_dir=$( echo $target_dir |sed 's/.\{1\}$//')
fi

# archive and compress the directory
tar -zcf "$target_dir".crypted "$target_dir"

# check if tar.gz was successful
if ! [ -f "$target_dir.crypted" ]; then
    echo "Archive and/or compression failed - exiting"
    exit 1
fi

# encrypt the archive file
gpg -c --cipher-algo AES256 "$target_dir".crypted

# check encryption was successful
if ! [ -f "$target_dir.crypted.gpg" ]; then
    echo "Encryption failed - exiting"
    rm $target_dir.crypted
    exit 1
fi

# delete old directory and unencrypted archive
rm -rf $target_dir && rm "$target_dir".crypted

# rename final file with .crypted extension only
mv "$target_dir".crypted.gpg "$target_dir".crypted

# print success message
echo "$target_dir --> $target_dir.crypted"
echo "Encryption complete"
